h1. node_mdns - service discovery for node.js

node_mdns adds support for multicast DNS service discovery, also known as zeroconf or bonjour to "node.js":/ry/node. It provides an object-oriented interface to announce and browse services on the local network.

Internally, it uses the mDNSResponder API which is available on all major platforms.

On Linux and other systems using the avahi daemon the avahi dns_sd compat library and its header files are required.

on debian:

bc. sudo aptitude install libavahi-compat-libdnssd-dev

h2. Installation

node_mdns is available as a npm package. To fetch, compile and install the add-on do:

bc. npm install mdns

If you want to play with the latest source code, here is a more manual approach:

bc.. git clone http://github.com/agnat/node_mdns
cd node_mdns
node-waf configure build && ./run_tests

h2. Tutorial

Multicast DNS service discovery provides a way to announce and discover services on the local network. Here is how to announce a HTTP server running on port 4321:

bc. var mdns = require('mdns');
var ad = mdns.createAdvertisement('http', 4321);
ad.start();

And here is how to browse all HTTP servers on the local network:

bc. var browser = mdns.createBrowser('http');
browser.on('serviceUp', function(info, flags) {
  sys.puts("Up: " + sys.inspect(info));
});
browser.on('serviceDown', function(info, flags) {
  sys.puts("Down: " + sys.inspect(info));
});
browser.start();

As you can see the browser object is an EventEmitter. For each HTTP server a 'serviceUp' event is emitted. Likewise, if a server disappears 'serviceDown' is send. A 'serviceUp' info object might look like this:

bc. { interfaceIndex: 4
, serviceName: 'somehost'
, regtype: '_http._tcp.'
, replyDomain: 'local.'
, fullname: 'somehost._http._tcp.local.'
, host: 'somehost.local.'
, port: 4321
, addresses: [ '10.1.1.50', 'fe80::21f:5bff:fecd:ce64' ]
}

h2. Reference

h3. mdns.Advertisement

h3. mdns.Browser

h3. C API

h2. Bugs, Fixes and Contributions

Yes, please.

h2. Design Notes

h2. License (MIT)

Copyright (c) 2010 David Siegel

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

